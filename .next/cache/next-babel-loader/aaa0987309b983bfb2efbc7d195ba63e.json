{"ast":null,"code":"import { useState, useEffect } from \"react\";\nexport default function isMobile() {\n  const {\n    0: isMobile,\n    1: setIsMobile\n  } = useState(Boolean);\n  const {\n    0: dimensions,\n    1: setDemensions\n  } = useState({\n    width: 0,\n    height: 0\n  });\n\n  const changeWindowSize = () => {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    setDemensions({\n      width,\n      height\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', changeWindowSize);\n    return () => {\n      window.removeEventListener('resize', changeWindowSize);\n    };\n  }, [dimensions]);\n  return dimensions.width && dimensions.width < 786;\n}","map":{"version":3,"sources":["F:/FRONTEND/nextjs/covid/helpers/isMobile/index.tsx"],"names":["useState","useEffect","isMobile","setIsMobile","Boolean","dimensions","setDemensions","width","height","changeWindowSize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,GAAmB;AAC9B,QAAM;AAAA,OAACA,QAAD;AAAA,OAAWC;AAAX,MAA0BH,QAAQ,CAACI,OAAD,CAAxC;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAYC;AAAZ,MAA6BN,QAAQ,CAAC;AACxCO,IAAAA,KAAK,EAAE,CADiC;AAExCC,IAAAA,MAAM,EAAE;AAFgC,GAAD,CAA3C;;AAKA,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,UAAMF,KAAK,GAAGG,MAAM,CAACC,UAArB;AACA,UAAMH,MAAM,GAAGE,MAAM,CAACE,WAAtB;AACAN,IAAAA,aAAa,CAAC;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAD,CAAb;AACH,GAJD;;AAMAP,EAAAA,SAAS,CAAC,MAAM;AAEZS,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,gBAAlC;AACA,WAAO,MAAM;AACTC,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,gBAArC;AACH,KAFD;AAGH,GANQ,EAMP,CAACJ,UAAD,CANO,CAAT;AAQA,SAAOA,UAAU,CAACE,KAAX,IAAoBF,UAAU,CAACE,KAAX,GAAmB,GAA9C;AACH","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default function isMobile(){\r\n    const [isMobile, setIsMobile] = useState(Boolean)\r\n    const [dimensions,setDemensions] = useState({\r\n        width: 0,\r\n        height: 0\r\n    })\r\n\r\n    const changeWindowSize = () => {\r\n        const width = window.innerWidth\r\n        const height = window.innerHeight\r\n        setDemensions({width, height})\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        window.addEventListener('resize', changeWindowSize)\r\n        return () => {\r\n            window.removeEventListener('resize', changeWindowSize)\r\n        }        \r\n    },[dimensions])\r\n\r\n    return dimensions.width && dimensions.width < 786\r\n}"]},"metadata":{},"sourceType":"module"}